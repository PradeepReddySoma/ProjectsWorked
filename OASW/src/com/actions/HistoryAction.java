/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.actions;

import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.dbUtil.DBUtil;
import com.forms.Accountant1Form;
import com.forms.AccountantForm;
import com.forms.AdminaccountForm;
import com.forms.ClientHistoryForm;
import com.forms.HistoryForm;


public class HistoryAction extends DispatchAction {

	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HistoryForm historyForm = (HistoryForm) form;// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		System.out .println("control in display");
		 
		return mapping.findForward("display");
	}
	public ActionForward showhistory(ActionMapping mapping, ActionForm form,
			    HttpServletRequest request, HttpServletResponse response) throws SQLException {
				HistoryForm historyForm = (HistoryForm) form;
				HttpSession session = request.getSession();
				Connection con = DBUtil.openConnection();

				 String com=(String) session.getAttribute("companyname"); 
				    String query = (String)request.getParameter("name");

				String fromdate=historyForm.getFromdate();
				String todate=historyForm.getTodate();
				String type = historyForm.getType();
				System.out.println("from date is "+fromdate+" to date is  "+todate+"unit is "+com);

				ResultSet rs = null; 
				Statement stmt = null;
				stmt = con.createStatement();
              
		
				String Sql = "SELECT * FROM ADMINACCOUNT WHERE  DATEOF BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND  UNIT= '"+com+"' AND UPPER(PARTICULARS) like '%' || UPPER('"+query+"') || '%' ORDER BY ID ASC";
				ArrayList a = new ArrayList();
				rs = stmt.executeQuery(Sql); 

				try {
				
					while (rs.next()) {
						HistoryForm hf=new HistoryForm();
						hf.setSlno1("download:"+rs.getString(1));
						hf.setDate1(rs.getString(2));
						hf.setParticulars1(rs.getString(3));
						hf.setInvoice1(rs.getString(4));
						hf.setFor12(rs.getString(5));
						hf.setTransaction1(rs.getString(6));
						hf.setAmount1(rs.getString(7));
						hf.setRemarks1(rs.getString(8));
						hf.setProcess1(rs.getString(9));
						hf.setUnit1(rs.getString(10));
						hf.setYear1(rs.getString(11));
						a.add(hf);
					}
					rs.close();
					stmt.close();
					con.close();
				} catch (Exception e) {
					e.printStackTrace();
				}
				request.setAttribute("empmaster", a);
                
				return mapping.findForward("display");
			}
	
	public ActionForward downloadadmin(ActionMapping mapping, ActionForm form,
			   HttpServletRequest request, HttpServletResponse response)
			   throws Exception {
			  HistoryForm historyForm = (HistoryForm) form;
		      HttpSession session = request.getSession();
			 
			  String param1 = request.getParameter("slno1");
			  String id[] = param1.split(":");
			  String slno1 = id[1].trim();
			  System.out.println("slno1--------"+slno1);
			  session.setAttribute("slna", slno1);
			  
			  String path = "C:\\OASW\\ADMIN";
			  String files;
			  File folder = new File(path);
			  File[] listOfFiles = folder.listFiles();
			  System.out.println(listOfFiles.length);
			  System.out.println("////////////");
			  try 
			  {
			   for (int i = 0; i < listOfFiles.length; i++) 
			   {
			    
			    if (listOfFiles[i].isFile()) 
			    {
			     files = listOfFiles[i].getName();
			     System.out.println(files);
			     String filename[] = files.split("\\.");
			     System.out.println(filename[0]);
			     if (filename[0].equalsIgnoreCase(slno1)) 
			     {
			      if (filename[0].equalsIgnoreCase("txt")) 
			      {
			       response.setContentType("text/plain");
			      } 
			      else if (filename[0].equalsIgnoreCase("pdf")) 
			      {
			       response.setContentType("application/pdf");
			      }
			      else if (filename[0].equalsIgnoreCase("xls")) 
			      {
			       response.setContentType("application/xls");
			      }
			      else if (filename[0].equalsIgnoreCase("html")) 
			      {
			       response.setContentType("text/html");
			      } 
			      else if (filename[0].equalsIgnoreCase("jpg")) 
			      {
			       response.setContentType("image/jpg");
			      } 
			      else if (filename[0].equalsIgnoreCase("txt")) 
			      {
			       response.setContentType("gif");
			      }
			      response.setHeader("Content-Disposition","attachment;filename=" + files + "");
			      File file = new File("C:\\OASW\\ADMIN\\"+ files);
			      System.out.println(file);
			      try 
			      {
			       FileInputStream fileIn = new FileInputStream(file);
			       ServletOutputStream out = response.getOutputStream();
			       byte[] outputByte = new byte[4096];
			       while (fileIn.read(outputByte, 0, 4096) != -1) 
			       {
			        out.write(outputByte, 0, 4096);
			       } 
			       fileIn.close();
			       out.flush();
			       out.close();
			      } 
			      catch (Exception e) 
			      {
			       e.printStackTrace();
			      }
			     } 
			     else 
			     {
			      String message = "No document found for given Task";
			      historyForm.setMessage(message);
			     }
			    }
			   }
			  } 
			  catch (Exception e) 
			  {
			   e.printStackTrace();
			  }
			  return mapping.findForward("display");
			 }

	
}