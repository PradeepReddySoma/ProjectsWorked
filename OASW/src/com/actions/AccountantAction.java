/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.actions;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.dbUtil.DBUtil;
import com.forms.AccountantForm;
import com.forms.AdminaccountForm;
import com.forms.EmployeeMaster;


public class AccountantAction extends DispatchAction {
	
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		AccountantForm accountantForm = (AccountantForm) form;// TODO Auto-generated method stub
		return mapping.findForward("display");
	}
	
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException, IOException {
		AccountantForm accountantForm = (AccountantForm) form;// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		String slno = accountantForm.getSlno();

		    String pathname = "C:\\OASW\\ADMIN";
	        File f1 = new File(pathname);
	        String[] allFiles = f1.list();
	        InputStream inStream = null;
	        OutputStream outStream = null;
	        byte[] buffer = new byte[1024];
	        for (String file : allFiles) {
	       if (file.contains(slno)) {
	                File source = new File(pathname + "\\" + file);
	                File dest = new File("C:\\OASW\\ACCOUNT\\" + file);
	                inStream = new FileInputStream(source);
	                outStream = new FileOutputStream(dest);
	                int length;
	                while ((length = inStream.read(buffer)) > 0) {
	               outStream.write(buffer, 0, length);
	                }
	            } 
	       else {
			System.out.println("FILE NOT FOUND");
		}
	            }
	        
		System.out.println("inside method");
		String date = accountantForm.getDate();
		String particulars = accountantForm.getParticulars();
		String invoice = accountantForm.getInvoice();
		String amount = accountantForm.getAmount();
		String for1 = accountantForm.getFor1(); 
		String credit = accountantForm.getCredit();
		String remarks = accountantForm.getRemarks();
		String year = accountantForm.getYear();
		String unit=accountantForm.getUnit();
	
		System.out.println("slno "+slno+" date "+date+" particulars "+particulars+" invoice number "+invoice+" cash/cheque number is "+amount+" pay for "+for1+" pay mode "+credit+" remarks "+remarks +" unit is "+unit+"year"+year);
		
		Connection con = DBUtil.openConnection();
	    Statement stmt = con.createStatement();
		ResultSet rs=null;
	    String Sql1 = "SELECT * FROM ACCOUNTANT ORDER BY ID ASC";
			rs = stmt.executeQuery(Sql1);
			int count2 = 1;
			int count3 = 1;
			while (rs.next()) {
				 String oldVersion = rs.getString("ID");
				 String version = oldVersion; 
				 System.out.println("string"+version);
	
					count2++;
				    count3=count2;
					 
			}
			int num = count3++;
			
		    System.out.print(num);
		    DateFormat dateFormat1 = new SimpleDateFormat("MM");
			Date date1 = new Date();
			String str1 = dateFormat1.format(date1);
		System.out.println("DDDD"); 
		String sql = "INSERT INTO ACCOUNTANT (SLNO,DATEOF,PARTICULARS,INVOICENUMBER,PAYFOR,PAYMODE,CHEQUENO,AMOUNT,UNIT,YEAR_IGI,ID,CURRENTMONTH) VALUES('"+slno+"',TO_DATE('"+date+"','DD/MM/YYYY'),'"+particulars+"','"+invoice+"','"+for1+"','"+credit+"','"+amount+"','"+remarks+"','"+unit+"','"+year+"','"+num+"','"+str1+"')";
		System.out.println("SQL IS"+sql);
		int status = stmt.executeUpdate(sql);
		
		if(status>0){
			String sql1 = "UPDATE ADMINACCOUNT SET STATUS ='1' WHERE SLNO = '"+slno+"'";
			stmt.executeQuery(sql1);

			request.setAttribute("msg1"," data modified successfully ");
		    accountantForm.setSlno("");
			 //accountantForm.setDate();
			 accountantForm.setParticulars("");
			 accountantForm.setInvoice("");
			 accountantForm.setDate("");
			 accountantForm.setAmount("");
			 accountantForm.setFor1("");
			 accountantForm.setCredit("");
			 accountantForm.setRemarks("");
			 accountantForm.setUnit("");		
			//empUpdateForm.setMessage("Task Details Updated Successfully");
			
		}
		else{
			request.setAttribute("msg"," data modified Unsuccessfully ");

		}
		System.out.println("AAAAAA");
		/*String Sql = "SELECT * FROM ADMINACCOUNT ORDER BY SLNO ASC";
		rs = stmt.executeQuery(Sql);
		 String com=(String) session.getAttribute("companyname"); 

		if(com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd."))
        { 
		rs = stmt.executeQuery(Sql);
		int count = 1;
		int count1 = 1;
		while (rs.next()) {
			 String oldVersion = rs.getString("SLNO");
			 String version = oldVersion; 
			 System.out.println("string"+version);	
			count++;
		    String[] splitString = version.split("-");
		    System.out.println("String is"+splitString[0]);
		    System.out.println("int"+splitString[1]);
		   String[] split = splitString[0].split("~"); 
		    System.out.println("String is"+split);

		    //int newVersion = Integer.valueOf(splitString[1])+1;
		    count1=count;
		}
           int newVersion = count1++;
		 String completeNewVersion = "Acc_IGI-" + newVersion;
		    System.out.print(completeNewVersion);
		    accountantForm.setSlno(completeNewVersion);
        }
        else {
    		rs = stmt.executeQuery(Sql);
    		int count = 1;
    		int count1 = 1;
    		while (rs.next()) {
    			 String oldVersion = rs.getString("SLNO");
    			 String version = oldVersion; 
    			 System.out.println("string"+version); 
    				
    			count++;
    		    String[] splitString = version.split("-");
    		    System.out.println("String is"+splitString[0]);
    		    System.out.println("int"+splitString[1]);
    		   String[] split = splitString[0].split("~"); 
    		    System.out.println("String is"+split);

    		    //int newVersion = Integer.valueOf(splitString[1])+1;
    		    count1=count;
    		}
               int newVersion = count1++;
    		 String completeNewVersion = "Acc_RK-" + newVersion;
    		    System.out.print(completeNewVersion);
    		    accountantForm.setSlno(completeNewVersion);
		}*/
		
		DBUtil.closeStatement(stmt);
		DBUtil.closeConnection(con);
		
		return mapping.findForward("display123");
	        
	}	

	public ActionForward show2(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		AccountantForm account = (AccountantForm) form;

		HttpSession session = request.getSession();
		Connection con = DBUtil.openConnection();
		Statement stmt = con.createStatement();
		ResultSet rs=null;
		 String com=(String) session.getAttribute("companyname"); 

/*
			if(com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd."))
	        { 
		    	String Sql1 = "SELECT * FROM ADMINACCOUNT ORDER BY SLNO ASC";

			rs = stmt.executeQuery(Sql1);
			int count = 1;
			int count1 = 1;
			while (rs.next()) {
				 String oldVersion = rs.getString("SLNO");
				 String version = oldVersion; 
				 System.out.println("string"+version);
			 
					
					count++;
			    String[] splitString = version.split("-");
			    System.out.println("String is"+splitString[0]);
			    System.out.println("int"+splitString[1]);
			   String[] split = splitString[0].split("~"); 
			    System.out.println("String is"+split);

			    //int newVersion = Integer.valueOf(splitString[1])+1;
			    count1=count;
			}
	           int newVersion = count1++;
			 String completeNewVersion = "Acc_IGI-" + newVersion;
			    System.out.print(completeNewVersion);
			    account.setSlno(completeNewVersion);
	        }
	        else {
		    	String Sql2 = "SELECT * FROM ADMINACCOUNT ORDER BY SLNO ASC";

	    		rs = stmt.executeQuery(Sql2);
	    		int count = 1;
	    		int count1 = 1;
	    		while (rs.next()) {
	    			 String oldVersion = rs.getString("SLNO");
	    			 String version = oldVersion; 
	    			 System.out.println("string"+version);
	    		 
	    				
	    				count++;
	    		    String[] splitString = version.split("-");
	    		    System.out.println("String is"+splitString[0]);
	    		    System.out.println("int"+splitString[1]);
	    		   String[] split = splitString[0].split("~"); 
	    		    System.out.println("String is"+split);

	    		    //int newVersion = Integer.valueOf(splitString[1])+1;
	    		    count1=count;
	    		}
	               int newVersion = count1++;
	    		 String completeNewVersion = "Acc_RK-" + newVersion;
	    		    System.out.print(completeNewVersion);
	    		    account.setSlno(completeNewVersion);
			}*/
	    	String Sql3 = "SELECT * FROM ADMINACCOUNT WHERE UNIT = '"+com+"' AND SLNO LIKE 'Admin_%' AND STATUS = '0' ORDER BY ID ASC";

		ArrayList a = new ArrayList();

			try {
				stmt = con.createStatement();
				rs = stmt.executeQuery(Sql3);
				while (rs.next()) {
					AccountantForm ac=new AccountantForm();
					ac.setSlno1(rs.getString(1));
					ac.setDate1(rs.getString(2));
					ac.setParticulars1(rs.getString(3));
					ac.setInvoice1(rs.getString(4));
					ac.setFor12(rs.getString(5));
					ac.setAmount1(rs.getString(6));
					ac.setCredit1(rs.getString(7));
					ac.setRemarks1(rs.getString(8));
					ac.setYear1(rs.getString(9));
		
					a.add(ac); 
				}
				
				rs.close();
				stmt.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.setAttribute("empmaster", a);
				System.out.println(a);
		return mapping.findForward("display");
	}
	
	public ActionForward selectRow(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws SQLException {
		AccountantForm accountantForm = (AccountantForm) form;
		String param1 = request.getParameter("slno1");
		String slno=accountantForm.getSlno1();
        System.out.println("slno is.............."+slno);
		Connection con = DBUtil.openConnection();
		Statement stmt = null;
		String sql = "SELECT * FROM ADMINACCOUNT  WHERE SLNO='"+slno+"' ";
		stmt = con.createStatement();
		 ResultSet rs = stmt.executeQuery(sql);
		   
	       while (rs.next()) {
	       System.out.println("inside while");
	        accountantForm.setSlno(rs.getString(1));    
	        accountantForm.setDate2(rs.getDate(2));
	        System.out.println("00000000000000"+rs.getDate(2));
			String dt1 = "";
			DateFormat dateFormat1 = new SimpleDateFormat("dd/MM/yyyy");
			dt1 = dateFormat1.format(accountantForm.getDate2());
			accountantForm.setDate(dt1);
            accountantForm.setParticulars(rs.getString(3));
	        accountantForm.setInvoice(rs.getString(4));
            accountantForm.setFor1(rs.getString(5));
            accountantForm.setCredit(rs.getString(6));
            accountantForm.setAmount(rs.getString(7));
            accountantForm.setRemarks(rs.getString(8));
            accountantForm.setUnit(rs.getString(9));   
            accountantForm.setUnit(rs.getString(10));
            accountantForm.setYear(rs.getString(11));

            System.out.println("inside................. while");
 
                 }

	        stmt.close();
			con.close();
		return mapping.findForward("display123");

}
	
}
