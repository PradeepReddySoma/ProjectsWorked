/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.actions;

import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import com.dbUtil.DBUtil;
import com.forms.Fieldtender1Form;
import com.forms.TenderForm;


public class Fieldtender1Action extends DispatchAction {
	
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception{
		Fieldtender1Form tenderdetailsForm = (Fieldtender1Form) form;
		System.out.println("control in display");
		HttpSession session = request.getSession();

		 String com=(String) session.getAttribute("companyname");
		 String roletype=(String) session.getAttribute("role"); 

		 tenderdetailsForm.setUnit(com);
		 
		  Connection con = DBUtil.openConnection();
		  ResultSet rs = null;
		  Statement stmt = con.createStatement();
		  
		
		  

			if(com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd."))
	        { 
                if(roletype.equalsIgnoreCase("SeniorManager"))
                {
                	  String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_IGI%' ORDER BY SERNUM ASC";
            		  rs = stmt.executeQuery(Sql);
            		
            		
int count = 1;
int count1 = 1;

while (rs.next()) {
String oldVersion = rs.getString("SERNUM");
String version = oldVersion; 
System.out.println("string"+version);	
count++;
String[] splitString = version.split("-");
System.out.println("String is"+splitString[0]);
System.out.println("int"+splitString[1]);
/*String[] split = splitString[0].split("~"); 
System.out.println("String is"+split);*/

//int newVersion = Integer.valueOf(splitString[1])+1;
count1=count;
}
int newVersion = count1++;
String completeNewVersion = "SM_IGI-" + newVersion;
System.out.print(completeNewVersion);
tenderdetailsForm.setSernum(completeNewVersion);
}
else {
	 String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_IGI%' ORDER BY SERNUM ASC";
	  rs = stmt.executeQuery(Sql);
int count = 1;
int count1 = 1;

while (rs.next()) {
String oldVersion = rs.getString("SERNUM");
String version = oldVersion; 
System.out.println("string"+version);	
count++;
String[] splitString = version.split("-");
System.out.println("String is"+splitString[0]);
System.out.println("int"+splitString[1]);
/*String[] split = splitString[0].split("~"); 
System.out.println("String is"+split);*/

//int newVersion = Integer.valueOf(splitString[1])+1;
count1=count;
}
int newVersion = count1++;
String completeNewVersion = "FO_IGI-" + newVersion;
System.out.print(completeNewVersion);
tenderdetailsForm.setSernum(completeNewVersion);
}
}

else {
if(roletype.equalsIgnoreCase("SeniorManager"))
                {
	 String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_RK%' ORDER BY SERNUM ASC";
	  rs = stmt.executeQuery(Sql);
int count = 1;
int count1 = 1;

while (rs.next()) {
String oldVersion = rs.getString("SERNUM");
String version = oldVersion; 
System.out.println("string"+version);	
count++;
String[] splitString = version.split("-");
System.out.println("String is"+splitString[0]);
System.out.println("int"+splitString[1]);
/*String[] split = splitString[0].split("~"); 
System.out.println("String is"+split);*/

//int newVersion = Integer.valueOf(splitString[1])+1;
count1=count;
}
int newVersion = count1++;
String completeNewVersion = "SM_RK-" + newVersion;
System.out.print(completeNewVersion);
tenderdetailsForm.setSernum(completeNewVersion);
}
else {
	 String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_RK%' ORDER BY SERNUM ASC";
	  rs = stmt.executeQuery(Sql);
int count = 1;
int count1 = 1;

while (rs.next()) {
String oldVersion = rs.getString("SERNUM");
String version = oldVersion; 
System.out.println("string"+version);	
count++;
String[] splitString = version.split("-");
System.out.println("String is"+splitString[0]);
System.out.println("int"+splitString[1]);
/*String[] split = splitString[0].split("~"); 
System.out.println("String is"+split);*/

//int newVersion = Integer.valueOf(splitString[1])+1;
count1=count;
}
int newVersion = count1++;
String completeNewVersion = "FO_RK-" + newVersion;
System.out.print(completeNewVersion);
tenderdetailsForm.setSernum(completeNewVersion);
}
			}
		
		return mapping.findForward("display");
	}
	
	
			 
			 
			   
		
	public ActionForward check(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
		 {
		Fieldtender1Form tenderdetailsForm = (Fieldtender1Form) form;

		return mapping.findForward("check");
	}
		
		
		
	 public ActionForward click(ActionMapping mapping, ActionForm form,
			   HttpServletRequest request, HttpServletResponse response)throws Exception {
		 Fieldtender1Form tenderdetailsForm = (Fieldtender1Form) form;
			  System.out.println("inside method");
			  HttpSession session = request.getSession();
			  
			 
			  
			  
			  try {
			   // file upload
			   // FileUploadForm fileUploadForm = (FileUploadForm)form;
			   FormFile file = tenderdetailsForm.getFile();

			   System.out.println("file---------------" + file);
			   // Get the servers upload directory real path name
			   // String filePath=getServlet().getServletContext().getRealPath("/")
			   // +"upload";
			   String filePath = "C:\\OASW\\TENDER";
			   // create the upload folder if not exists
			   File folder = new File(filePath);
			   if (!folder.exists()) {
			    folder.mkdirs();
			   }
			   String fileName = file.getFileName();
			   String extension[] = fileName.split("\\.");
			   // System.out.println(extension.length
			   // +"----------------------------------------");
			   if (extension.length != 1) {
			    String getExtension = extension[1];
			    if (!("").equals(fileName)) {
			     System.out.println("Server path:" + filePath);
			     File newFile = new File(filePath, fileName);
			     try {
			      if (!newFile.exists()) {
			       FileOutputStream fos = new FileOutputStream(newFile);
			       fos.write(file.getFileData());
			       fos.flush();
			       fos.close();
			      }
			     } catch (Exception e) {
			      e.printStackTrace();
			     }

			     String app = "FILE";
			     newFile.renameTo(new File("C:\\OASW\\TENDER\\" +tenderdetailsForm.getSernum()+"."+getExtension));
			     request.setAttribute("uploadedFilePath", newFile
			       .getAbsoluteFile());
			     request.setAttribute("uploadedFileName", newFile.getName());
			    }
			   } else {

			   }
			  } catch (Exception e) {
			   e.printStackTrace();
			  }
		
			  String sernum = tenderdetailsForm.getSernum();
			  String datepick = tenderdetailsForm.getDatepick();
			  
			  String tender = tenderdetailsForm.getTender();
			  String calldat = tenderdetailsForm.getCalldat();
			  String lastdat = tenderdetailsForm.getLastdat();
			  String employ = tenderdetailsForm.getEmploy();
			  FormFile file = tenderdetailsForm.getFile();
			 String unit = tenderdetailsForm.getUnit();
			 String name = tenderdetailsForm.getContname();
			 String no = tenderdetailsForm.getContno();
			 String tenderNumber=tenderdetailsForm.getTenderNumber();
			   String message = tenderdetailsForm.getMessage();
			   Connection con = null;
			   PreparedStatement prepare = null;
			   con = DBUtil.openConnection();
			   
			   Statement stmt = con.createStatement();
				ResultSet rs=null;
				 String roletype=(String) session.getAttribute("role"); 
					String com=(String) session.getAttribute("companyname");

               int num = 0;
			if(com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd."))
               {
			   String Sql1 = "SELECT * FROM TENDERDETAILS  WHERE SERNUM  LIKE '%_IGI-%' ORDER BY ID ASC";
				rs = stmt.executeQuery(Sql1);
				int count2 = 1;
				int count3 = 1;
				while (rs.next()) {
					 String oldVersion = rs.getString("ID");
					 String version = oldVersion; 
					 System.out.println("string"+version);
					    //int newVersion = Integer.valueOf(splitString[1])+1;

						
						count2++;
						 count3=count2;
						 
				}
				 num = count3++;
               }
			else
			{
				 String Sql1 = "SELECT * FROM TENDERDETAILS  WHERE SERNUM  LIKE '%_RK-%' ORDER BY ID ASC";
					rs = stmt.executeQuery(Sql1);
					int count2 = 1;
					int count3 = 1;
					while (rs.next()) {
						 String oldVersion = rs.getString("ID");
						 String version = oldVersion; 
						 System.out.println("string"+version);
						    //int newVersion = Integer.valueOf(splitString[1])+1;

							
							count2++;
							 count3=count2;
							 
					}
					 num = count3++;
			}
			    System.out.print(num);
			    DateFormat dateFormat1 = new SimpleDateFormat("MM");
				Date date1 = new Date();
				String str1 = dateFormat1.format(date1);
			   String sql = "insert into TENDERDETAILS values('"+sernum+"',TO_DATE('"+datepick+"','DD/MM/YYYY'),'"+tender+"','"+calldat+"','"+lastdat+"','"+employ+"','"+file+"','"+unit+"','"+num+"','"+str1+"','"+name+"','"+no+"','"+tenderNumber+"')";
			   prepare = con.prepareStatement(sql);
			    int t= prepare.executeUpdate();
			    request.setAttribute("msg"," data inserted successfully ");


			    if (t > 0) {
				     Statement stmt1 = con.createStatement();
				 

						if(com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd."))
				        { 			  if(roletype.equalsIgnoreCase("SeniorManager"))
                        {
				            String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_IGI%' ORDER BY SERNUM ASC";
						     ResultSet rs1 = stmt1.executeQuery(Sql);

							int count = 1;
							int count1 = 1;
							
							while (rs1.next()) {
								 String oldVersion = rs1.getString("SERNUM");
								 String version = oldVersion; 
								 System.out.println("string"+version);	
									count++;
							    String[] splitString = version.split("-");
							    System.out.println("String is"+splitString[0]);
							    System.out.println("int"+splitString[1]);
							   /*String[] split = splitString[0].split("~"); 
							    System.out.println("String is"+split);*/

							    //int newVersion = Integer.valueOf(splitString[1])+1;
							    count1=count;
							}
					           int newVersion = count1++;
							 String completeNewVersion = "SM_IGI-" + newVersion;
							    System.out.print(completeNewVersion);
							    tenderdetailsForm.setSernum(completeNewVersion);
					        }
				                                       else {


				            String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_IGI%' ORDER BY SERNUM ASC";
				            ResultSet rs1 = stmt1.executeQuery(Sql);						
				            int count = 1;
							int count1 = 1;
							
							while (rs1.next()) {
								 String oldVersion = rs1.getString("SERNUM");
								 String version = oldVersion; 
								 System.out.println("string"+version);	
									count++;
							    String[] splitString = version.split("-");
							    System.out.println("String is"+splitString[0]);
							    System.out.println("int"+splitString[1]);
							   /*String[] split = splitString[0].split("~"); 
							    System.out.println("String is"+split);*/

							    //int newVersion = Integer.valueOf(splitString[1])+1;
							    count1=count;
							}
					           int newVersion = count1++;
							 String completeNewVersion = "FO_IGI-" + newVersion;
							    System.out.print(completeNewVersion);
							    tenderdetailsForm.setSernum(completeNewVersion);
				                                                 }
				                                 }

					        else {
					    		   if(roletype.equalsIgnoreCase("SeniorManager"))
				                                                                           {


							String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_RK%' ORDER BY SERNUM ASC";
						    ResultSet rs1 = stmt1.executeQuery(Sql);						
						    int count = 1;
							int count1 = 1;
							
							while (rs1.next()) {
								 String oldVersion = rs1.getString("SERNUM");
								 String version = oldVersion; 
								 System.out.println("string"+version);	
									count++;
							    String[] splitString = version.split("-");
							    System.out.println("String is"+splitString[0]);
							    System.out.println("int"+splitString[1]);
							   /*String[] split = splitString[0].split("~"); 
							    System.out.println("String is"+split);*/

							    //int newVersion = Integer.valueOf(splitString[1])+1;
							    count1=count;
							}
					           int newVersion = count1++;
							 String completeNewVersion = "SM_RK-" + newVersion;
							    System.out.print(completeNewVersion);
							    tenderdetailsForm.setSernum(completeNewVersion);
					        }
				                                       else {


				             String Sql = "SELECT * FROM TENDERDETAILS WHERE SERNUM LIKE '%_RK%' ORDER BY SERNUM ASC";
				             ResultSet rs1 = stmt1.executeQuery(Sql);						
				             int count = 1;
							int count1 = 1;
							
							while (rs1.next()) {
								 String oldVersion = rs1.getString("SERNUM");
								 String version = oldVersion; 
								 System.out.println("string"+version);	
									count++;
							    String[] splitString = version.split("-");
							    System.out.println("String is"+splitString[0]);
							    System.out.println("int"+splitString[1]);
							   /*String[] split = splitString[0].split("~"); 
							    System.out.println("String is"+split);*/

							    //int newVersion = Integer.valueOf(splitString[1])+1;
							    count1=count;
							}
					           int newVersion = count1++;
							 String completeNewVersion = "FO_RK-" + newVersion;
							    System.out.print(completeNewVersion);
							    tenderdetailsForm.setSernum(completeNewVersion);
				                                                 }
							}
						
			     tenderdetailsForm.setDatepick("");
			     tenderdetailsForm.setTenderNumber("");
			     tenderdetailsForm.setTender("");
			     tenderdetailsForm.setLastdat("");
			     tenderdetailsForm.setEmploy("");
			     tenderdetailsForm.setCalldat("");
			     tenderdetailsForm.setContname("");
			     tenderdetailsForm.setContno("");
			        
			     
			     return mapping.findForward("display");
			    } else {

			     return mapping.findForward("display");

			    }
}
}