/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.actions;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.dbUtil.DBUtil;
import com.forms.DashboardForm;

public class DashboardAction extends DispatchAction {
	
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		DashboardForm cdbf = (DashboardForm) form;
		// method stub
		// System.out.println("in dashboard action --------");
		/*Connection con = DBUtil.openConnection();
		Statement stmt = null;
		ResultSet rs = null;
		String sql1 = "SELECT COUNT(*) AS TOTAL FROM CRM_WMS_TABLE WHERE COMPLAINT_STATUS='open'";
		String sql2 = "SELECT COUNT(*) AS PENDING FROM CRM_WMS_TABLE WHERE COMPLAINT_STATUS='Pending'";
		String sql3 = "SELECT COUNT(*) AS NOTHANDLED FROM CRM_WMS_TABLE WHERE COMPLAINT_STATUS='Not Handled'";
		String sql4 = "SELECT COUNT(*) AS COMPLESCALATE FROM CRM_WMS_TABLE WHERE COMPLAINT_STATUS='Escalate' AND JOB_CARD_GENERATE_DATE!='null'";
		String sql5 = "SELECT COUNT(*) AS CLOSED FROM CRM_WMS_TABLE WHERE COMPLAINT_STATUS='Closed'";
		String sql6 = "SELECT COUNT(*) AS REGISTERED FROM CRM_WMS_TABLE";
		// System.out.println(sql1.toString());
		// System.out.println(sql2.toString());
		// System.out.println(sql3.toString());
		con = DBUtil.openConnection();
		stmt = con.createStatement();
		rs = stmt.executeQuery(sql1);
		if (rs.next()) {
			cdbf.setTotalCopen(rs.getInt("TOTAL"));
		}
		rs = stmt.executeQuery(sql2);
		if (rs.next()) {
			cdbf.setPending(rs.getInt("PENDING"));
		}
		rs = stmt.executeQuery(sql3);
		if (rs.next()) {
			cdbf.setComplaintNH(rs.getInt("NOTHANDLED"));
		}
		rs = stmt.executeQuery(sql4);
		if (rs.next()) {
			cdbf.setComplEscalate(rs.getString("COMPLESCALATE"));
		}
		rs = stmt.executeQuery(sql5);
		if (rs.next()) {
			cdbf.setDone(rs.getInt("CLOSED"));
		}
		rs = stmt.executeQuery(sql6);
		if (rs.next()) {
			cdbf.setComplaintReg(rs.getInt("REGISTERED"));
		}
		String sql21 = "SELECT MAX(COMPL_NO) AS MAXNO FROM CRM_WMS_TABLE";
		rs = stmt.executeQuery(sql21);
		if (rs.next()) {
			cdbf.setComplaintNo(rs.getString("MAXNO"));
		}
		String num = cdbf.getComplaintNo();
		String sql22 = "SELECT FUN_BUS_DEP,count(*) as ESC_COUNT FROM CRM_WMS_TABLE WHERE COMPLAINT_STATUS='Escalate' group by FUN_BUS_DEP";
		rs = stmt.executeQuery(sql22);
		ArrayList<DashboardForm> al = new ArrayList<DashboardForm>();
		while(rs.next()) {
			DashboardForm escCount = new DashboardForm();
			escCount.setFuncBussDept(rs.getString("FUN_BUS_DEP"));
			escCount.setEscCount(rs.getInt("ESC_COUNT"));
			al.add(escCount);
			cdbf.setDate1(rs.getDate("COMPL_DATE"));
			String dt = "";
			DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
			dt = dateFormat.format(cdbf.getDate1());
			cdbf.setComplaintDate(dt);
			cdbf.setJobCardGenerateDate(rs.getString("JOB_CARD_GENERATE_DATE"));
			cdbf.setComplAttnRem(rs.getString("ASSIGNED_TO"));
			cdbf.setClosedDate(rs.getString("CLOSE_DATE"));
			String dt1 = "";
			cdbf.setComplAttnDate(dt1);
			// cdbf.setClosedDate(dt1);
			cdbf.setFeedback(rs.getString("FEEDBACK"));
		}
		String sql23 = "SELECT FUN_BUS_DEP,count(*) as ESC_COUNT FROM CRM_WMS_TABLE group by FUN_BUS_DEP";
		rs = stmt.executeQuery(sql23);
		ArrayList<DashboardForm> a2 = new ArrayList<DashboardForm>();
		while(rs.next()){
			DashboardForm totalCount = new DashboardForm();
			totalCount.setFuncBussDept(rs.getString("FUN_BUS_DEP"));
			totalCount.setTotalCount(rs.getInt("ESC_COUNT"));
			a2.add(totalCount);
		}
		
		request.setAttribute("escCountDetails", al);
		request.setAttribute("totalCountDetails", a2);
		DBUtil.closeResultSet(rs);
		DBUtil.closeStatement(stmt);
		DBUtil.closeConnection(con);*/
		return mapping.findForward("display");
	}

	/*public ActionForward displayComplaint(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		DashboardForm cdb = (DashboardForm) form;
		// method stub
		String complaintNo = cdb.getComplaintNo();
		// System.out.println("complaint no===="+complaintNo);
		DashboardForm cdbf = cdb.readComplOnDashBoard(complaintNo);
		cdb.setClosedDate(cdbf.getComplaintNo());
		cdb.setComplaintDate(cdbf.getComplaintDate());
		cdb.setComplAttnDate(cdbf.getComplAttnDate());
		cdb.setJobCardGenerateDate(cdbf.getJobCardGenerateDate());
		cdb.setComplAttnRem(cdbf.getComplAttnRem());
		cdb.setClosedDate(cdbf.getClosedDate());
		cdb.setFeedback(cdbf.getFeedback());
		HttpSession session = request.getSession();
		return mapping.findForward("display");
	}*/
}