/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.actions;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.businessobjects.reports.crprompting.CRPromptValue.Str;
import com.dbUtil.DBUtil;
import com.forms.PersonalinfoForm;

public class PersonalinfoAction extends DispatchAction {

	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws SQLException {
		PersonalinfoForm personalinfoForm = (PersonalinfoForm) form;
		HttpSession session = request.getSession();
		String com = (String) session.getAttribute("companyname");
		personalinfoForm.setUnit(com);
		Connection con = DBUtil.openConnection();

		ResultSet rs = null;
		Statement stmt = con.createStatement();
		if (com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd.")) {

			String Sql = "SELECT * FROM PERSONAL_DETAILS WHERE UNIT = '" + com
					+ "' ORDER BY SLNO ASC";
			rs = stmt.executeQuery(Sql);
			int count = 1;
			int count1 = 1;
			while (rs.next()) {
				String oldVersion = rs.getString("SLNO");
				String version = oldVersion;
				System.out.println("string" + version);
				count++;
				// int newVersion = Integer.valueOf(splitString[1])+1;
				count1 = count;
			}
			int newVersion = count1++;
			String completeNewVersion = "" + newVersion;
			System.out.print(completeNewVersion);
			personalinfoForm.setSlno(completeNewVersion);
		} else {
			String Sql = "SELECT * FROM PERSONAL_DETAILS WHERE UNIT = '" + com
					+ "' ORDER BY SLNO ASC";
			rs = stmt.executeQuery(Sql);
			int count = 1;
			int count1 = 1;
			while (rs.next()) {
				String oldVersion = rs.getString("SLNO");
				String version = oldVersion;
				System.out.println("string" + version);
				count++;
				// int newVersion = Integer.valueOf(splitString[1])+1;
				count1 = count;
			}
			int newVersion = count1++;
			String completeNewVersion = "" + newVersion;
			System.out.print(completeNewVersion);
			personalinfoForm.setSlno(completeNewVersion);
		}
		return mapping.findForward("display");
	}

	public ActionForward personaldetails(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws SQLException {
		PersonalinfoForm personalinfoForm = (PersonalinfoForm) form;
		HttpSession session = request.getSession();
		String com = (String) session.getAttribute("companyname");
		System.out.println("HHHHHHHHHHHHHHHHHH");
		Connection con = DBUtil.openConnection();
		ResultSet rs = null;
		Statement stmt = con.createStatement();
		String slno = personalinfoForm.getSlno();
		String date = personalinfoForm.getDate1();
		String des = personalinfoForm.getDescription();
		String amount = personalinfoForm.getAmount();
		String remarks = personalinfoForm.getRemarks();
		String credit = personalinfoForm.getCredited();
		String unit = personalinfoForm.getUnit();
		int count2 = 1;
		int count3 = 1;
		if (com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd.")) {

			String Sql1 = "SELECT * FROM PERSONAL_DETAILS WHERE UNIT = '" + com
					+ "' ORDER BY ID ASC";
			rs = stmt.executeQuery(Sql1);

			while (rs.next()) {
				String oldVersion = rs.getString("ID");
				String version = oldVersion;
				System.out.println("string" + version);

				count2++;
				count3 = count2;

			}
		} else {

			String Sql1 = "SELECT * FROM PERSONAL_DETAILS WHERE UNIT ='" + com
					+ "' ORDER BY ID ASC";
			rs = stmt.executeQuery(Sql1);

			while (rs.next()) {
				String oldVersion = rs.getString("ID");
				String version = oldVersion;
				System.out.println("string" + version);
				count2++;
				count3 = count2;
			}
		}
		int num = count3++;

		System.out.print(num);
		System.out.println("slno " + slno + " date " + date + " description "
				+ des + " amount " + amount + " remarks " + remarks
				+ " credits " + credit + " unit " + unit + " ");

		String sql = "INSERT INTO PERSONAL_DETAILS VALUES('" + slno
				+ "',TO_DATE('" + date + "','DD/MM/YYYY'),'" + des + "','"
				+ amount + "','" + remarks + "','" + credit + "','" + unit
				+ "','" + num + "')";
		stmt.executeUpdate(sql);
		request.setAttribute("msg", " data inserted successfully ");
		personalinfoForm.setDate1("");
		personalinfoForm.setDescription("");
		personalinfoForm.setAmount("");
		personalinfoForm.setRemarks("");
		personalinfoForm.setCredited("");
		if (com.equalsIgnoreCase("IngroInfo Software Solutions pvt ltd.")) {
			String Sql = "SELECT * FROM PERSONAL_DETAILS WHERE UNIT = '" + com
					+ "' ORDER BY SLNO ASC";
			rs = stmt.executeQuery(Sql);
			int count = 1;
			int count1 = 1;
			while (rs.next()) {
				String oldVersion = rs.getString("SLNO");
				String version = oldVersion;
				System.out.println("string" + version);
				count++;
				// int newVersion = Integer.valueOf(splitString[1])+1;
				count1 = count;
			} 
			int newVersion = count1++;
			String completeNewVersion = "" + newVersion;
			System.out.print(completeNewVersion);
			personalinfoForm.setSlno(completeNewVersion);
		} else {
			String Sql = "SELECT * FROM PERSONAL_DETAILS WHERE UNIT = '" + com
					+ "' ORDER BY SLNO ASC";
			rs = stmt.executeQuery(Sql);
			int count = 1;
			int count1 = 1;
			while (rs.next()) { 
				String oldVersion = rs.getString("SLNO");
				String version = oldVersion;
				System.out.println("string" + version);
				count++;
				// int newVersion = Integer.valueOf(splitString[1])+1;
				count1 = count;
			}
			int newVersion = count1++;
			String completeNewVersion = "" + newVersion;
			System.out.print(completeNewVersion);
			personalinfoForm.setSlno(completeNewVersion);
		}
		return mapping.findForward("display");
	}

	public ActionForward historyinfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws SQLException {
		PersonalinfoForm personalinfoForm = (PersonalinfoForm) form;
		return mapping.findForward("history");
	}
}