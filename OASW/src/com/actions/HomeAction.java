/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.actions;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.dbUtil.DBUtil;
import com.forms.HomeForm;

/**
 * MyEclipse Struts Creation date: 06-19-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/home" name="homeForm" input="/form/home.jsp"
 *                parameter="method" scope="request" validate="true"
 */
public class HomeAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HomeForm homeForm = (HomeForm) form;
		homeForm.setUserNameData("");
		homeForm.setPasswordData("");
		return mapping.findForward("display");
	}
	
	public ActionForward authenticUserData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		HomeForm homeForm = (HomeForm) form;
		HttpSession session = request.getSession();
		String username = homeForm.getUserNameData();
		String password = homeForm.getPasswordData();
		String role = (String) session.getAttribute("role");
		Connection connection = DBUtil.openConnection();
		Statement statement = connection.createStatement();
		String sql = "SELECT * FROM EMPLOYEES where USERNAME='" + username+ "'and PASS_WORD='" + password + "' AND USER_TYPE='" + role + "'";
		ResultSet rs = statement.executeQuery(sql);
		/*String contactNo = "9731542318";

		String authkey = "71706ADdoQKOQ54046d4c";
		// Multiple mobiles numbers seperated by comma
		String mobiles = contactNo;
		System.out.println("the mobileNo is" + mobiles);
		// String cc1[]=complaintCategory.split(" ");
		// String cc11=cc1[0];
		// String cc12=cc1[1];
		// Sender ID,While using route4 sender id should
		// be 6 characters long.
		String senderId = "INGRO";
		// Your message to send, Add URL endcoding here.
		String message = "Dear admin you have successfully logged in for Application Module";
		// define route
		String route = "4";

		// Prepare Url
		URLConnection myURLConnection = null;
		URL myURL = null;
		BufferedReader reader = null;

		// encoding message
		String encoded_message = URLEncoder.encode(message);

		// Send SMS API
		String mainUrl = "http://control.msg91.com/sendhttp.php?";

		// Prepare parameter string
		StringBuilder sbPostData = new StringBuilder(mainUrl);
		sbPostData.append("authkey=" + authkey);
		sbPostData.append("&mobiles=" + mobiles);
		sbPostData.append("&message=" + encoded_message);
		sbPostData.append("&route=" + route);
		sbPostData.append("&sender=" + senderId);
		// final string
		mainUrl = sbPostData.toString();
		try {
			// prepare connection
			myURL = new URL(mainUrl);

			myURLConnection = myURL.openConnection();
			myURLConnection.connect();
			reader = new BufferedReader(new InputStreamReader(myURLConnection.getInputStream()));
			// reading response
			String response1;
			while ((response1 = reader.readLine()) != null)
				// print response
				System.out.println(response1);
			// finally close connection
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}*/
		System.out.println("11111111111111111111");
		if(rs.next()){
			homeForm.setMessage("Login Details Are correct");
			return mapping.findForward("success");
		}
		else{ 
			homeForm.setMessage("Login Details Are Incorrect");
			return mapping.findForward("failure");
		}
	}
}