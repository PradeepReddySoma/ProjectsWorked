/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.actions;

import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.dbUtil.DBUtil;
import com.forms.ClientHistoryForm;
import com.forms.ClientPaymentForm;

public class ClientHistoryAction extends DispatchAction {
	
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ClientHistoryForm clientHistoryForm = (ClientHistoryForm) form;// TODO Auto-generated method stub
		return mapping.findForward("display");
	}
	
	public ActionForward clientHis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ClientHistoryForm clientHistoryForm = (ClientHistoryForm) form;
		String fromdate=clientHistoryForm.getFromdate(); 
		String todate=clientHistoryForm.getTodate();
		HttpSession session = request.getSession();

		 String com=(String) session.getAttribute("companyname"); 
          String type = clientHistoryForm.getType();
          String name = clientHistoryForm.getName();
		
		System.out.println("from date is "+fromdate+" to date is  "+todate+"unit is "+com);
		
		Connection con = DBUtil.openConnection();
		ResultSet rs = null;
		Statement stmt = null;
		if (type.equalsIgnoreCase("PROJECTNAME")) {
			
		System.out.println("projectname");
		String Sql = "SELECT * FROM CLIENTPAYMENT WHERE   DATEOFPAY BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND UNIT = '"+com+"' AND PROJECTNAME LIKE '%"+name+"%' ORDER BY ID ASC";
		ArrayList a = new ArrayList();

		try {
			stmt = con.createStatement();
			rs = stmt.executeQuery(Sql);
			while (rs.next()) {
				ClientHistoryForm cl=new ClientHistoryForm();
				cl.setSlno121("download:"+rs.getString(1));
				cl.setDate121(rs.getString(2));
				cl.setProject1(rs.getString(3));
				cl.setInvoice121(rs.getString(4));
				cl.setInvoice1(rs.getString(5));
				cl.setType1(rs.getString(6));
				cl.setAmount121(rs.getString(7));
				cl.setAccnumber1(rs.getString(10));
				cl.setUnit2(rs.getString(8));
			
				cl.setYear1(rs.getString(9));
				
				a.add(cl);
			}
			rs.close();
			stmt.close();
			con.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		request.setAttribute("empmaster", a);
		}
		else if (type.equalsIgnoreCase("INVOICENUMBER")) {
			
			
			String Sql = "SELECT * FROM CLIENTPAYMENT WHERE   DATEOFPAY BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND UNIT = '"+com+"' AND INVOICENUMBER LIKE '%"+name+"%' ORDER BY ID ASC";
			ArrayList a = new ArrayList();

			try {
				stmt = con.createStatement();
				rs = stmt.executeQuery(Sql);
				while (rs.next()) {
					ClientHistoryForm cl=new ClientHistoryForm();
					cl.setSlno121("download:"+rs.getString(1));
					cl.setDate121(rs.getString(2));
					cl.setProject1(rs.getString(3));
					cl.setInvoice121(rs.getString(4));
					cl.setInvoice1(rs.getString(5));
					cl.setType1(rs.getString(6));
					cl.setAmount121(rs.getString(7));
					cl.setAccnumber1(rs.getString(10));
					cl.setUnit2(rs.getString(8));
				
					cl.setYear1(rs.getString(9));
					
					a.add(cl);
				}
				rs.close();
				stmt.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.setAttribute("empmaster", a);
			}
		else if (type.equalsIgnoreCase("INVOICEAMOUNT")) {
			
			
			String Sql = "SELECT * FROM CLIENTPAYMENT WHERE   DATEOFPAY BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND UNIT = '"+com+"' AND INVOICEAMOUNT LIKE '%"+name+"%' ORDER BY ID ASC";
			ArrayList a = new ArrayList();

			try {
				stmt = con.createStatement();
				rs = stmt.executeQuery(Sql);
				while (rs.next()) {
					ClientHistoryForm cl=new ClientHistoryForm();
					cl.setSlno121("download:"+rs.getString(1));
					cl.setDate121(rs.getString(2));
					cl.setProject1(rs.getString(3));
					cl.setInvoice121(rs.getString(4));
					cl.setInvoice1(rs.getString(5));
					cl.setType1(rs.getString(6));
					cl.setAmount121(rs.getString(7));
					cl.setAccnumber1(rs.getString(10));
					cl.setUnit2(rs.getString(8));
				
					cl.setYear1(rs.getString(9));
					
					a.add(cl);
				}
				rs.close();
				stmt.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.setAttribute("empmaster", a);
			}
		else if (type.equalsIgnoreCase("PAYMODE")) {
			
			
			String Sql = "SELECT * FROM CLIENTPAYMENT WHERE   DATEOFPAY BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND UNIT = '"+com+"' AND PAYMODE LIKE '%"+name+"%' ORDER BY ID ASC";
			ArrayList a = new ArrayList();

			try {
				stmt = con.createStatement();
				rs = stmt.executeQuery(Sql);
				while (rs.next()) {
					ClientHistoryForm cl=new ClientHistoryForm();
					cl.setSlno121("download:"+rs.getString(1));
					cl.setDate121(rs.getString(2));
					cl.setProject1(rs.getString(3));
					cl.setInvoice121(rs.getString(4));
					cl.setInvoice1(rs.getString(5));
					cl.setType1(rs.getString(6));
					cl.setAmount121(rs.getString(7));
					cl.setAccnumber1(rs.getString(10));
					cl.setUnit2(rs.getString(8));
				
					cl.setYear1(rs.getString(9));
					
					a.add(cl);
				}
				rs.close();
				stmt.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.setAttribute("empmaster", a);
			}
		else if (type.equalsIgnoreCase("CHEQUENO")) {
			
			
			String Sql = "SELECT * FROM CLIENTPAYMENT WHERE   DATEOFPAY BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND UNIT = '"+com+"' AND CHEQUENO LIKE '%"+name+"%' ORDER BY ID ASC";
			ArrayList a = new ArrayList();

			try {
				stmt = con.createStatement();
				rs = stmt.executeQuery(Sql);
				while (rs.next()) {
					ClientHistoryForm cl=new ClientHistoryForm();
					cl.setSlno121("download:"+rs.getString(1));
					cl.setDate121(rs.getString(2));
					cl.setProject1(rs.getString(3));
					cl.setInvoice121(rs.getString(4));
					cl.setInvoice1(rs.getString(5));
					cl.setType1(rs.getString(6));
					cl.setAmount121(rs.getString(7));
					cl.setAccnumber1(rs.getString(10));
					cl.setUnit2(rs.getString(8));
				
					cl.setYear1(rs.getString(9));
					
					a.add(cl);
				}
				rs.close();
				stmt.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.setAttribute("empmaster", a);
			}
		else if (type.equalsIgnoreCase("ACCNUMBER")) {
			
		
			
			
			String Sql = "SELECT * FROM CLIENTPAYMENT WHERE   DATEOFPAY BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND UNIT = '"+com+"' AND ACCNUMBER LIKE '%"+name+"%' ORDER BY ID ASC";
			ArrayList a = new ArrayList();

			try {
				stmt = con.createStatement();
				rs = stmt.executeQuery(Sql);
				while (rs.next()) {
					ClientHistoryForm cl=new ClientHistoryForm();
					cl.setSlno121("download:"+rs.getString(1));
					cl.setDate121(rs.getString(2));
					cl.setProject1(rs.getString(3));
					cl.setInvoice121(rs.getString(4));
					cl.setInvoice1(rs.getString(5));
					cl.setType1(rs.getString(6));
					cl.setAmount121(rs.getString(7));
					cl.setAccnumber1(rs.getString(10));
					cl.setUnit2(rs.getString(8));
				
					cl.setYear1(rs.getString(9));
					
					a.add(cl);
				}
				rs.close();
				stmt.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.setAttribute("empmaster", a);
			}
 else  {
			System.out.println("aaaaaaaaaaa");
			String Sql = "SELECT * FROM CLIENTPAYMENT WHERE   DATEOFPAY BETWEEN TO_DATE('"+fromdate+"','DD/MM/YYYY') AND TO_DATE('"+todate+"','DD/MM/YYYY') AND UNIT = '"+com+"'  ORDER BY ID ASC";
			ArrayList a = new ArrayList();

			try {
				stmt = con.createStatement();
				rs = stmt.executeQuery(Sql);
				while (rs.next()) {
					ClientHistoryForm cl=new ClientHistoryForm();
					cl.setSlno121("download:"+rs.getString(1));
					cl.setDate121(rs.getString(2));
					cl.setProject1(rs.getString(3));
					cl.setInvoice121(rs.getString(4));
					cl.setInvoice1(rs.getString(5));
					cl.setType1(rs.getString(6));
					cl.setAmount121(rs.getString(7));
					cl.setAccnumber1(rs.getString(10));
					cl.setUnit2(rs.getString(8));
				
					cl.setYear1(rs.getString(9));
					
					a.add(cl);
				}
				rs.close();
				stmt.close();
				con.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.setAttribute("empmaster", a);
			}
		return mapping.findForward("display");
	}
	public ActionForward download(ActionMapping mapping, ActionForm form,
			   HttpServletRequest request, HttpServletResponse response)
			   throws Exception {
			  ClientHistoryForm clientHistoryForm = (ClientHistoryForm) form;
			  
			  HttpSession session = request.getSession();
			 
			  String param1 = request.getParameter("slno121");
			  String id[] = param1.split(":");
			  String slno1 = id[1].trim();
			  System.out.println("slno1--------"+slno1);
			  session.setAttribute("slna", slno1);
			  
			  String path = "C:\\OASW\\CLIENT";
			  String files;
			  File folder = new File(path);
			  File[] listOfFiles = folder.listFiles();
			  System.out.println(listOfFiles.length);
			  System.out.println("////////////");
			  try 
			  {
			   for (int i = 0; i < listOfFiles.length; i++) 
			   {
			    
			    if (listOfFiles[i].isFile()) 
			    {
			     files = listOfFiles[i].getName();
			     System.out.println(files);
			     String filename[] = files.split("\\.");
			     System.out.println(filename[0]);
			     if (filename[0].equalsIgnoreCase(slno1)) 
			     {
			      if (filename[0].equalsIgnoreCase("txt")) 
			      {
			       response.setContentType("text/plain");
			      } 
			      else if (filename[0].equalsIgnoreCase("pdf")) 
			      {
			       response.setContentType("application/pdf");
			      }
			      else if (filename[0].equalsIgnoreCase("xls")) 
			      {
			       response.setContentType("application/xls");
			      }
			      else if (filename[0].equalsIgnoreCase("html")) 
			      {
			       response.setContentType("text/html");
			      } 
			      else if (filename[0].equalsIgnoreCase("jpg")) 
			      {
			       response.setContentType("image/jpg");
			      } 
			      else if (filename[0].equalsIgnoreCase("txt")) 
			      {
			       response.setContentType("gif");
			      }
			      response.setHeader("Content-Disposition","attachment;filename=" + files + "");
			      File file = new File("C:\\OASW\\CLIENT\\"+ files);
			      System.out.println(file);
			      try 
			      {
			       FileInputStream fileIn = new FileInputStream(file);
			       ServletOutputStream out = response.getOutputStream();
			       byte[] outputByte = new byte[4096];
			       while (fileIn.read(outputByte, 0, 4096) != -1) 
			       {
			        out.write(outputByte, 0, 4096);
			       }
			       fileIn.close();
			       out.flush();
			       out.close();
			      } 
			      catch (Exception e) 
			      {
			       e.printStackTrace();
			      }
			     } 
			     else 
			     {
			      String message = "No document found for given Task";
			      clientHistoryForm.setMessage(message);
			     }
			    }
			   }
			  } 
			  catch (Exception e) 
			  {
			   e.printStackTrace();
			  }
			  return mapping.findForward("display");
			 }
	
}